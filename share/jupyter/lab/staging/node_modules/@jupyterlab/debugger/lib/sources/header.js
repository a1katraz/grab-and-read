// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.
import { ReactWidget, Toolbar, UseSignal } from '@jupyterlab/apputils';
import { PanelLayout, Widget } from '@lumino/widgets';
import React from 'react';
/**
 * The header for a Source Panel.
 */
export class SourcesHeader extends Widget {
    /**
     * Instantiate a new SourcesHeader.
     * @param model The model for the Sources.
     */
    constructor(model) {
        super({ node: document.createElement('header') });
        /**
         * The toolbar for the sources header.
         */
        this.toolbar = new Toolbar();
        const layout = new PanelLayout();
        this.layout = layout;
        const title = new Widget({ node: document.createElement('h2') });
        title.node.textContent = 'Source';
        const sourcePath = ReactWidget.create(React.createElement(SourcePathComponent, { model: model }));
        layout.addWidget(title);
        layout.addWidget(this.toolbar);
        layout.addWidget(sourcePath);
        this.addClass('jp-DebuggerSources-header');
    }
}
/**
 * A React component to display the path to a source.
 * @param model The model for the sources.
 */
const SourcePathComponent = ({ model }) => {
    return (React.createElement(UseSignal, { signal: model.currentSourceChanged, initialSender: model }, model => {
        var _a, _b;
        return (React.createElement("span", { onClick: () => model.open() }, (_b = (_a = model.currentSource) === null || _a === void 0 ? void 0 : _a.path, (_b !== null && _b !== void 0 ? _b : ''))));
    }));
};
