/// <reference types="react" />
import { ReactWidget } from '@jupyterlab/apputils';
import { CommandRegistry } from '@lumino/commands';
import { VariablesModel } from './model';
import { IDebugger } from '../tokens';
/**
 * The body for a table of variables.
 */
export declare class VariablesBodyTable extends ReactWidget {
    /**
     * Instantiate a new Body for the table of variables.
     * @param options The instantiation options for a VariablesBodyTable.
     */
    constructor(options: VariablesBodyTable.IOptions);
    /**
     * Render the VariablesComponent.
     */
    render(): JSX.Element;
    /**
     * Set the variable filter list.
     */
    set filter(filter: Set<string>);
    /**
     * Update the scopes and the table of variables.
     * @param model The variables model.
     */
    private _updateScopes;
    private _scopes;
    private _filter;
    private _commands;
}
/**
 * A widget to display details for a variable.
 */
export declare class VariableDetails extends ReactWidget {
    /**
     * Instantiate a new Body for the detail table of the selected variable.
     * @param options The instantiation options for VariableDetails.
     */
    constructor(options: VariableDetails.IOptions);
    /**
     * Render the VariablesComponent.
     */
    render(): JSX.Element;
    /**
     * Handle when the debug model changes.
     */
    private _onModelChanged;
    private _variables;
    private _commands;
}
/**
 * A namespace for VariablesBodyTable `statics`.
 */
declare namespace VariablesBodyTable {
    /**
     * Instantiation options for `VariablesBodyTable`.
     */
    interface IOptions {
        /**
         * The variables model.
         */
        model: VariablesModel;
        /**
         * The commands registry.
         */
        commands: CommandRegistry;
    }
}
/**
 * A namespace for VariableDetails `statics`.
 */
declare namespace VariableDetails {
    /**
     * Instantiation options for `VariableDetails`.
     */
    interface IOptions {
        /**
         * The variables model.
         */
        model: VariablesModel;
        /**
         * The details of the selected variable.
         */
        details: VariablesModel.IVariable[];
        /**
         * The debugger service.
         */
        service: IDebugger;
        /**
         * The commands registry.
         */
        commands: CommandRegistry;
        /**
         * The name of the selected variable.
         */
        title: string;
    }
}
export {};
